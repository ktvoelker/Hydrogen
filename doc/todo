
TODO
====

Get rid of the complicated option parsing and phase system

  Instead, just provide a simple primitive for terminating a pipeline early if there
  are any errors, and another for terminating a pipeline early no matter what

Make the internal module structure less confusing (mostly in the H.Monad space)

Add an option to RefGraph: it can throw an error when adding a reference to a missing
node, rather than allowing it

  This should be available through both the monadic interface and the plain one

  In the monadic interface, require the underlying monad to be
  MonadM, and throw the error

Convert Lexer to use conduit

Think about single-token interpolation more deeply

Eliminate String more completely

  Hide Prelude and Data.List functions dealing only with String

    Provide replacements as needed

  Hide the old Show and Read classes in place of Text-based ones

    Use Builder in Show

    Provide a less crazy type in Read

Allow nested block comments, optionally

