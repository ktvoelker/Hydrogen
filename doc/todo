
TODO
====

Scope maintenance is just a specialized, separate ReaderT - parameterized on the
various types involved, so that it can be used to store anything

  Put this in H.Monad.Scope

  In addition to keeping the environment mapping in the reader, also keep a stack
  of entries (which is our case will be either Rec | Def Unique) - and require a
  new entry when descending a level

    Require that the stack entries be in a typeclass that provides a function:
      isNewScope :: a -> Bool

Get rid of all uses of Monad in Parser

Convert to AParsec

Convert Lexer to use conduit

Think about single-token interpolation more deeply

Eliminate String more completely

  Hide Prelude and Data.List functions dealing only with String

    Provide replacements as needed

  Hide the old Show and Read classes in place of Text-based ones

    Use Builder in Show

    Provide a less crazy type in Read

Allow nested block comments, optionally

